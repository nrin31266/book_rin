version: "3"
networks:
  microservice-network:
    driver: bridge

services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: ms_kafka
    hostname: kafka
    ports:
      - '9092:9092'  # Added listener port
      - '9093:9093'  # Added controller port
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - microservice-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: identity-service
      MYSQL_USER: nrin31266
      MYSQL_PASSWORD: 16092005
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - microservice-network

  neo4j:
    image: neo4j:4.4
    container_name: ms_neo4j
    environment:
      NEO4J_AUTH: neo4j/16092005  # Correct format
    ports:
      - "7474:7474"   # HTTP interface
      - "7687:7687"   # Bolt interface
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
    networks:
      - microservice-network

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - microservice-network

volumes:
  mysql-data:
  neo4j-data:
  neo4j-logs:
  neo4j-import:
  mongo-data:
